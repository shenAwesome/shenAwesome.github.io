{"version":3,"sources":["block/Drag.tsx","block/model.ts","block/Layout.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Tolerance","mousemove","e","currentDrag","started","fireEvent","_currentDrag$start","start","x","y","Math","abs","clientX","clientY","mouseup","window","removeEventListener","ele","onDrag","type","this","DragEvent","init","addEventListener","change","mouseEvent","Object","classCallCheck","Drag","_ref","style","children","ref","React","createRef","react_default","a","createElement","className","onMouseDown","current","Size","width","height","default","src","changed","View","id","render","title","weight","_shouldSelect","AnchorModel","view","arguments","length","undefined","replace","c","r","random","toString","size","parent","dir","match","some","findById","findByView","concat","toConsumableArray","ancestors","ret","forEach","decendents","anc","console","log","clone","addChild","anchor","push","read","child","insertAt","isContainer","includes","before","removeChild","indexOf","splice","cleanup","reduce","s","max","useUpdate","_React$useState","useState","update","slicedToArray","findLayout","element","classList","contains","parentElement","Tabs","views","onDrop","dragShadow","_useState","_useState2","active","setActive","selected","min","tabs","map","i","key","classnames","_ref2","add","cloneNode","document","body","appendChild","left","top","dropKey","elementFromPoint","getAttribute","parentNode","remove","Anchor","_ref3","model","updateAnchor","content","drawChildren","key_fix","filter","t","total","configSize","ratio","positions","usedLength","lastOne","currentSize","floor","round","dkey","drag","_ref4","changeMin","changeMax","parseInt","posChange","defineProperty","isTab","anchorId","split","root","target","moveTo","insert","idx","index","evolve","resetSize","zoneNames","dropZones","name","_style","cssKey","bottom","right","depth","x-dropkey","sizeCSS","Layout","_ref6","_useState3","_useState4","setRoot","useRef","useEffect","rect","getBoundingClientRect","setTimeout","addView","a2","a5","_update","apply","App","Layout_Layout","Component","Boolean","location","hostname","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fc7448d0.chunk.js","sourcesContent":["import React, { Component, useEffect, useState, useRef } from 'react';\r\n\r\ninterface XY {\r\n    x: number,\r\n    y: number\r\n}\r\n\r\nconst Tolerance = 10\r\n\r\nfunction mousemove(e: MouseEvent) {\r\n    if (currentDrag.started) {\r\n        currentDrag.fireEvent(e, 'Moving')\r\n    } else {\r\n        const { x, y } = currentDrag.start\r\n        if (Math.abs(e.clientX - x) + Math.abs(e.clientY - y) > Tolerance) {\r\n            currentDrag.fireEvent(e, 'Start')\r\n            currentDrag.started = true\r\n        }\r\n    }\r\n}\r\n\r\nfunction mouseup(e: MouseEvent) {\r\n    window.removeEventListener('mousemove', mousemove)\r\n    window.removeEventListener('mouseup', mouseup)\r\n    if (currentDrag.started) {\r\n        currentDrag.fireEvent(e, 'Finish')\r\n        currentDrag.started = false\r\n    }\r\n}\r\n\r\nconst currentDrag = {\r\n    ele: null as HTMLDivElement,\r\n    start: {\r\n        x: 0, y: 0\r\n    },\r\n    started: false,\r\n    onDrag: null as DragCallback,\r\n\r\n    fireEvent(e: MouseEvent, type: DragType) {\r\n        if (this.onDrag) this.onDrag(new DragEvent(this.ele, {\r\n            x: e.clientX - this.start.x,\r\n            y: e.clientY - this.start.y\r\n        }, type, e))\r\n    },\r\n\r\n    init(ele: HTMLDivElement, e: MouseEvent, onDrag: DragCallback) {\r\n        this.ele = ele\r\n        this.started = false\r\n        currentDrag.start.x = e.clientX\r\n        currentDrag.start.y = e.clientY\r\n        this.onDrag = onDrag\r\n        window.addEventListener('mousemove', mousemove)\r\n        window.addEventListener('mouseup', mouseup)\r\n    }\r\n}\r\n\r\nclass DragEvent {\r\n    constructor(public ele: HTMLDivElement, public change: XY, public type: DragType, public mouseEvent: MouseEvent) {\r\n\r\n    }\r\n}\r\n\r\ntype DragType = 'Start' | 'Moving' | 'Finish'\r\ntype DragCallback = (evt: DragEvent) => void\r\ninterface DragProps {\r\n    onDrag: DragCallback,\r\n    style?: React.CSSProperties,\r\n    children?: any\r\n}\r\n\r\nfunction Drag({ onDrag, style, children }: DragProps) {\r\n    const ref = React.createRef<HTMLDivElement>()\r\n    return <div className='Drag' onMouseDown={(e) => {\r\n        currentDrag.init(ref.current, e as any, onDrag)\r\n    }} style={style} ref={ref}>{children}</div>\r\n}\r\n\r\n\r\nexport { Drag, DragEvent }","\r\n\r\nfunction uuid() {\r\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n    return v.toString(16);\r\n  });\r\n}\r\n\r\nclass Size {\r\n  constructor(public width: number, public height: number) {\r\n\r\n  }\r\n  read(src: { width: number, height: number }) {\r\n    let changed = false\r\n    if (this.width !== src.width || this.height !== src.height) {\r\n      this.width = src.width\r\n      this.height = src.height\r\n      changed = true\r\n    }\r\n    this.default = false\r\n    return changed\r\n  }\r\n  default = true\r\n}\r\n\r\nclass View {\r\n  title: string | JSX.Element = ''\r\n  weight = 1\r\n  /**to ask tab to show view as active */\r\n  _shouldSelect = false\r\n\r\n  constructor(public id: string, public render: () => JSX.Element) {\r\n    this.title = id\r\n  }\r\n}\r\n\r\ntype AnchorDir = 'horizontal' | 'vertical' | 'tabs'\r\n\r\n/**\r\n * an Anchor either has a view or has children, can never both\r\n * if pull an anchor to a ViewAnchor, that convert it to a ContainerAnchor\r\n */\r\nclass AnchorModel {\r\n  readonly id = uuid()\r\n  readonly children: AnchorModel[] = []\r\n  readonly size = new Size(100, 100)\r\n\r\n  parent: AnchorModel = null\r\n  dir: AnchorDir = 'horizontal'\r\n  get sizeCSS() {\r\n    return {\r\n      width: this.size.width + 'px',\r\n      height: this.size.height + 'px'\r\n    }\r\n  }\r\n\r\n  get ancestors(): AnchorModel[] {\r\n    const { parent } = this\r\n    if (parent) {\r\n      return [parent, ... this.parent.ancestors]\r\n    } else {\r\n      return []\r\n    }\r\n  }\r\n\r\n  get decendents(): AnchorModel[] {\r\n    let ret: AnchorModel[] = [this]\r\n    this.children.forEach(c => {\r\n      ret = ret.concat(c.decendents)\r\n    })\r\n    return ret\r\n  }\r\n\r\n  /**\r\n   * root of the anchor tree\r\n   */\r\n  get root(): AnchorModel {\r\n    let anc = this as AnchorModel\r\n    while (anc.parent) anc = anc.parent\r\n    return anc;\r\n  }\r\n\r\n  findById(id: string) {\r\n    if (this.id == id) {\r\n      return this\r\n    } else {\r\n      let match = null\r\n      this.children.some(c => {\r\n        match = c.findById(id)\r\n        return match != null\r\n      })\r\n      return match\r\n    }\r\n  }\r\n\r\n  findByView(view: View) {\r\n    if (this.view == view) {\r\n      return this\r\n    } else {\r\n      let match = null\r\n      this.children.some(c => {\r\n        match = c.findByView(view)\r\n        return match != null\r\n      })\r\n      return match\r\n    }\r\n  }\r\n\r\n  get depth() {\r\n    return this.ancestors.length\r\n  }\r\n\r\n  constructor(public view: View = null) {\r\n\r\n  }\r\n\r\n  get weight() {\r\n    let size = 1\r\n    if (this.isContainer) {\r\n      size = this.children.reduce((s, c) => {\r\n        return Math.max(s, c.weight)\r\n      }, size)\r\n    } else {\r\n      size = this.view.weight\r\n    }\r\n    return size || 1\r\n  }\r\n\r\n  /** todo */\r\n  resetSize() {\r\n    const { weight } = this\r\n    this.size.width = 100 * weight\r\n    this.size.height = 100 * weight\r\n    console.log(weight)\r\n  }\r\n\r\n  get isContainer() {\r\n    return this.view == null\r\n  }\r\n\r\n  /**\r\n   * test if anchor is in tab form\r\n   */\r\n  get isTab() {\r\n    return !!this.view || this.dir == 'tabs'\r\n  }\r\n\r\n  get index() {\r\n    return this.parent ? this.parent.children.indexOf(this) : -1\r\n  }\r\n\r\n  /** \r\n   * when a view is dragged to an anchor but the direction doesn't fit or not a container,\r\n   * evolve self to have the desired dir\r\n   */\r\n  evolve(dir: AnchorDir) {\r\n    ////console.log('evolve with ' + dir)\r\n    const clone = this.clone()\r\n    clone.children.forEach(c => c.parent = clone)\r\n    this.children.length = 0\r\n    this.dir = dir\r\n    this.addChild(clone)\r\n    return this\r\n  }\r\n\r\n  clone() {\r\n    const anchor = new AnchorModel()\r\n    anchor.dir = this.dir\r\n    this.children.forEach(c => anchor.children.push(c))\r\n    anchor.size.read(this.size)\r\n    return anchor\r\n  }\r\n\r\n  /**\r\n   * move anchor among the anchor tree\r\n   * if this is not a container, this will be converted to a container and original view goes down\r\n   * @param child \r\n   */\r\n  addChild(child: AnchorModel, insertAt = -1) {\r\n    const { children, isContainer, view } = this\r\n    if (isContainer) {//already a container \r\n      if (children.includes(child)) {//means reorder\r\n        var before = children[insertAt]\r\n        this.removeChild(child)\r\n        this.addChild(child, this.children.indexOf(before))\r\n        return\r\n      } else {\r\n        if (insertAt != -1) {\r\n          children.splice(insertAt, 0, child)\r\n        } else {\r\n          children.push(child)\r\n        }\r\n        if (child.parent) {\r\n          child.parent.removeChild(child)\r\n        }\r\n        child.parent = this\r\n      }\r\n    } else {//change to a container\r\n      this.view = null\r\n      this.addChild(new AnchorModel(view))\r\n      this.addChild(child, insertAt)\r\n    }\r\n  }\r\n\r\n  removeChild(child: AnchorModel) {\r\n    this.children.splice(this.children.indexOf(child), 1)\r\n    child.parent = null\r\n  }\r\n\r\n  /**\r\n   * show cut to attach a new view to the tree\r\n   * @param view \r\n   * @param insertAt \r\n   */\r\n  addView(view: View, insertAt = -1) {\r\n    const child = new AnchorModel(view)\r\n    this.addChild(child, insertAt)\r\n    return child\r\n  }\r\n\r\n  /**\r\n   * remove useless anchor\r\n   */\r\n  cleanup() {\r\n    this.children.forEach(c => c.cleanup())\r\n    if (this.isContainer && this.children.length == 0) {\r\n      if (this.parent) this.parent.removeChild(this)\r\n    }\r\n  }\r\n}\r\n\r\nexport { AnchorModel, View }","\r\nimport React, { useEffect, useState, useRef } from 'react'\r\nimport { Drag, DragEvent } from './Drag'\r\nimport classnames from 'classnames'\r\nimport { AnchorModel, View } from './model'\r\nimport './Layout.scss'\r\n\r\ntype AnchorDir = 'horizontal' | 'vertical' | 'tabs'\r\n\r\nfunction useUpdate() {\r\n    const [, update] = React.useState()\r\n    return () => {\r\n        update(Math.random())\r\n    }\r\n}\r\n\r\nfunction findLayout(element: HTMLElement): HTMLElement {\r\n    if (element == null) {\r\n        return null\r\n    } else if (element.classList.contains('Layout')) {\r\n        return element\r\n    } else {\r\n        return findLayout(element.parentElement)\r\n    }\r\n}\r\n\r\ninterface TabsProps {\r\n    views: View[]\r\n    onDrop: (key: string, view: View) => void\r\n}\r\n\r\nfunction Tabs({ views, onDrop }: TabsProps) {\r\n    let dragShadow: HTMLDivElement = null\r\n    const [active, setActive] = useState(0)\r\n\r\n    const selected = Math.max(Math.min(active, views.length - 1), 0),\r\n        tabs = views.map((view, i) => {\r\n            if (view._shouldSelect) {\r\n                view._shouldSelect = false\r\n                setActive(i)\r\n                return\r\n            }\r\n            function onDrag({ type, ele, mouseEvent }: DragEvent) {\r\n                const { clientX: x, clientY: y } = mouseEvent\r\n                switch (type) {\r\n                    case \"Start\": //build a drag shadow\r\n                        findLayout(ele).classList.add('dragging')\r\n                        dragShadow = ele.cloneNode(true) as HTMLDivElement\r\n                        dragShadow.classList.add('asDragShadow')\r\n                        document.body.appendChild(dragShadow)\r\n                        dragShadow.style.left = x + 10 + 'px'\r\n                        dragShadow.style.top = y + 2 + 'px'\r\n                        break;\r\n                    case \"Moving\":\r\n                        dragShadow.style.left = x + 10 + 'px'\r\n                        dragShadow.style.top = y + 2 + 'px'\r\n                        break;\r\n                    case \"Finish\":\r\n                        const dropZone = document.elementFromPoint(x, y),\r\n                            dropKey = dropZone.getAttribute(\"x-dropkey\")\r\n                        //dragShadow.remove() //IE doesn't support it\r\n                        dragShadow.parentNode.removeChild(dragShadow);\r\n                        findLayout(ele).classList.remove('dragging')\r\n                        onDrop(dropKey, view)\r\n                        break;\r\n                }\r\n            }\r\n\r\n            return <span key={i} onMouseDown={() => {\r\n                if (active !== i) setActive(i)\r\n            }} className={classnames({ selected: selected == i })}>\r\n                <Drag onDrag={onDrag}>{view.title}</Drag>\r\n            </span>\r\n        })\r\n    //console.log(selected, views.length)\r\n    const body = views[selected].render()\r\n\r\n    return <div className='Tabs'>\r\n        <div className='head'>{tabs}</div>\r\n        <div className='body'>{body}</div>\r\n    </div>\r\n}\r\n\r\ninterface AnchorProps {\r\n    model: AnchorModel\r\n    update: () => void\r\n}\r\nfunction Anchor({ model: anchor, update }: AnchorProps) {\r\n    const { isContainer, view, dir, children } = anchor,\r\n        updateAnchor = useUpdate(),\r\n        content: JSX.Element[] = []\r\n\r\n    function drawChildren(key: 'width' | 'height') {\r\n        const key_fix = ['width', 'height'].filter(t => t !== key)[0] as 'width' | 'height'\r\n        const total = anchor.size[key],\r\n            configSize = children.reduce((t, c) => t + c.size[key], 0),\r\n            ratio = total / configSize,\r\n            positions = [0]\r\n        let usedLength = 0\r\n        children.forEach((c, i) => {\r\n            const lastOne = (i == children.length - 1),\r\n                currentSize = lastOne ? Math.floor(total - usedLength) : Math.round(c.size[key] * ratio)\r\n            c.size[key] = currentSize\r\n            c.size[key_fix] = anchor.size[key_fix]\r\n            usedLength += currentSize\r\n            content.push(<Anchor model={c} key={c.id} update={update} />)\r\n\r\n            if (!lastOne) {//not the last, add a separator \r\n                const dkey = (key == 'width') ? 'left' : 'top',\r\n                    drag = {\r\n                        init: 0,\r\n                        change: 0\r\n                    }\r\n                content.push(<Drag key={'Drag_' + i} onDrag={({ ele, change, type }) => {\r\n                    const changeMin = -currentSize + 20,\r\n                        changeMax = children[i + 1].size[key] - 20\r\n                    switch (type) {\r\n                        case 'Start':\r\n                            drag.init = parseInt(ele.style[dkey])\r\n                            drag.change = 0\r\n                            ele.classList.add('moving')\r\n                            break;\r\n                        case 'Moving':\r\n                            let posChange = change[key == 'width' ? 'x' : 'y']\r\n                            drag.change = Math.max(changeMin, Math.min(posChange, changeMax))\r\n                            ele.style[dkey] = (drag.init + drag.change) + 'px'\r\n                            break;\r\n                        case 'Finish'://apply to the container //affect siblings \r\n                            children[i].size[key] += drag.change\r\n                            children[i + 1].size[key] -= drag.change\r\n                            updateAnchor()\r\n                            ele.classList.remove('moving')\r\n                            break;\r\n                    }\r\n                }} style={{\r\n                    [dkey]: usedLength + 'px'\r\n                }} />)\r\n            }\r\n            positions.push(usedLength)\r\n        })\r\n    }\r\n\r\n    function onDrop(key: string, view: View) {\r\n        //console.log('ondrop')\r\n        if (!(key && view)) return  //for safty\r\n        const anchorId = key.split('_')[0],\r\n            { root } = anchor\r\n        const target = root.findByView(view),\r\n            moveTo = root.findById(anchorId),\r\n            dir = key.split('_')[1] as 'centre' | 'top' | 'bottom' | 'left' | 'right'\r\n        if (target == moveTo) {\r\n            //console.log('same. skip')\r\n            return //do nothing\r\n        }\r\n\r\n        function insert(dir: AnchorDir, before: boolean) {\r\n            const { parent } = moveTo\r\n            if (moveTo.isContainer && moveTo.dir == dir) {//insert to self \r\n                //console.log('add to self ')\r\n                moveTo.addChild(target, before ? 0 : -1)\r\n            } else if (parent && parent.dir == dir) {//insert to parent before self  \r\n                const idx = moveTo.index + (before ? 0 : 1)\r\n                //console.log('add to parent ' + idx)\r\n                parent.addChild(target, idx)\r\n            } else {//convert self\r\n                const container = moveTo.evolve(dir)\r\n                container.addChild(target, (before ? 0 : 1))\r\n            }\r\n            target.parent.children.forEach(c => c.resetSize()) //even space\r\n        }\r\n\r\n        switch (dir) {\r\n            case 'centre':\r\n                moveTo.addChild(target)\r\n                moveTo.dir = 'tabs'\r\n                break\r\n            case 'top': insert('vertical', true); break;\r\n            case 'bottom': insert('vertical', false); break;\r\n            case 'left': insert('horizontal', true); break;\r\n            case 'right': insert('horizontal', false);; break;\r\n        }\r\n        target.view._shouldSelect = true\r\n        update()\r\n        const w = window as any;\r\n        w['r'] = target.root\r\n    }\r\n\r\n    if (anchor.isTab) {\r\n        const views = view == null ? children.map(a => a.view) : [view]\r\n        content.push(<Tabs key='tabs' views={views} onDrop={onDrop} />)\r\n    } else {\r\n        switch (dir) {\r\n            case \"horizontal\": drawChildren('width'); break;\r\n            case \"vertical\": drawChildren('height'); break;\r\n        }\r\n    }\r\n    //the drop zones  \r\n    let zoneNames = 'centre,top,bottom,left,right'\r\n    if (!anchor.isTab) {\r\n        if (anchor.dir == 'horizontal') zoneNames = 'centre,top,bottom'\r\n        if (anchor.dir == 'vertical') zoneNames = 'centre,left,right'\r\n    }\r\n\r\n    const dropZones = zoneNames.split(',').map(name => {\r\n        var cssKey = ({\r\n            'top': 'bottom',\r\n            'bottom': 'top',\r\n            'left': 'right',\r\n            'right': 'left'\r\n        } as any)[name]\r\n\r\n        let size = (anchor.depth + 1) * 20\r\n        if (anchor.isTab) {\r\n            size = Math.max(size,\r\n                (cssKey == 'left' || cssKey == 'right' ? anchor.size.width : anchor.size.height) * .3)\r\n        }\r\n        const style = {\r\n            [cssKey]: `calc(100% - ${size}px)`,\r\n            zIndex: 10\r\n        }\r\n\r\n\r\n        if (name == 'centre') (style as any)['zIndex'] = anchor.depth\r\n        const dropKey = anchor.id + \"_\" + name\r\n        return <div key={'dzone_' + name} x-dropkey={dropKey}\r\n            className={classnames('dropZone', name)} style={style} />\r\n    })\r\n\r\n    /*\r\n    var ref = useRef<HTMLDivElement>()\r\n    useEffect(() => {\r\n        anchor.size.read(ref.current.getBoundingClientRect())\r\n    })\r\n    */\r\n    //todo only add dir class name for container\r\n    return <div style={anchor.sizeCSS}\r\n        id={anchor.id} className={classnames('Anchor', isContainer ? dir : null)} >\r\n        {content}\r\n        {dropZones}\r\n    </div>\r\n}\r\n\r\n\r\ninterface LayoutProps {\r\n    views: View[]\r\n}\r\nfunction Layout({ views }: LayoutProps) {\r\n    const [root, setRoot] = useState<AnchorModel>(null),\r\n        update = useUpdate(),\r\n        ref = useRef<HTMLDivElement>()\r\n    //console.log('render')\r\n\r\n    useEffect(() => {\r\n        const rect = ref.current.getBoundingClientRect()\r\n        if (rect.height == 0) {\r\n            setTimeout(update, 100);\r\n        } else {\r\n            if (root.size.read(rect)) update()\r\n        }\r\n    });\r\n\r\n    //didmounted\r\n    useEffect(() => {\r\n        root.decendents.forEach(a => a.resetSize());\r\n    }, []);\r\n\r\n    if (!root) {\r\n        let root = new AnchorModel\r\n        root.addView(views[0])\r\n        root.addView(views[1])\r\n        let a2 = root.addView(views[2])\r\n        a2.dir = 'vertical'\r\n        a2.addView(views[3])\r\n        a2.addView(views[4])\r\n        let a5 = root.addView(views[5])\r\n        a5.dir = 'tabs'\r\n        a5.addView(views[6])\r\n        a5.addView(views[7])\r\n        setRoot(root)\r\n    }\r\n\r\n    return <div className='SBlock Layout' ref={ref}>\r\n        {(root && !root.size.default) ? <Anchor model={root} update={() => {\r\n            root.cleanup()\r\n            update()\r\n        }} /> : null}\r\n    </div >\r\n}\r\n\r\nexport { View, Layout }   ","import React, { Component } from 'react';\n\nimport { View, Layout } from './block/Layout'\n\n\nconst views: View[] = []\n\n'0,1,2,3,4,5,6,7,8,9,10'.split(',').forEach(name => {\n  const view = new View(\"view \" + name, () => {\n    //console.log('print ' + name)\n    return <div>view {name}</div>\n  })\n  if (name == '1') view.weight = 2\n  views.push(view)\n})\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Layout views={views} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'babel-polyfill';\nimport 'react-app-polyfill/ie11'\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}