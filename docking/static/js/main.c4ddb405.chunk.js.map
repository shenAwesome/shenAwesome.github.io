{"version":3,"sources":["block/Drag.tsx","block/block.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Tolerance","mousemove","e","currentDrag","started","fireEvent","_currentDrag$start","start","x","y","Math","abs","clientX","mouseup","window","removeEventListener","ele","onDrag","type","this","DragEvent","clientY","init","addEventListener","change","mouseEvent","Object","classCallCheck","Drag","_ref","style","children","ref","React","createRef","react_default","a","createElement","className","onMouseDown","current","useUpdate","_React$useState","useState","update","slicedToArray","random","View","id","render","title","Size","width","height","default","src","changed","AnchorModel","view","arguments","length","undefined","replace","c","r","toString","size","parent","dir","match","some","findById","findByView","concat","toConsumableArray","ancestors","anc","console","log","clone","forEach","addChild","anchor","push","read","child","index","splice","insertAt","isContainer","includes","before","removeChild","indexOf","cleanup","findLayout","element","classList","contains","parentElement","Tabs","views","onDrop","dragShadow","_useState","_useState2","active","setActive","selected","max","min","tabs","map","i","key","classnames","_ref2","add","cloneNode","document","body","appendChild","left","top","dropKey","elementFromPoint","getAttribute","remove","Anchor","_ref3","model","updateAnchor","content","drawChildren","key_fix","filter","t","total","configSize","reduce","ratio","positions","usedLength","lastOne","currentSize","floor","round","dkey","drag","_ref4","changeMin","changeMax","parseInt","posChange","defineProperty","anchorId","split","root","target","moveTo","insert","idx","evolve","dropZones","name","_style","cssKey","bottom","right","depth","x-dropkey","sizeCSS","Layout","_ref6","_useState3","_useState4","setRoot","useRef","useEffect","rect","getBoundingClientRect","setTimeout","addView","a2","a5","_update","apply","App","Component","Boolean","location","hostname","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c4ddb405.chunk.js","sourcesContent":["import React, { Component, useEffect, useState, useRef } from 'react';\r\nimport { resetWarningCache } from 'prop-types';\r\n\r\ninterface XY {\r\n    x: number,\r\n    y: number\r\n}\r\n\r\nconst Tolerance = 10\r\n\r\nfunction mousemove(e: MouseEvent) {\r\n    if (currentDrag.started) {\r\n        currentDrag.fireEvent(e, 'Moving')\r\n    } else {\r\n        const { x, y } = currentDrag.start\r\n        if (Math.abs(e.clientX - x) + Math.abs(e.clientX - y) > Tolerance) {\r\n            currentDrag.fireEvent(e, 'Start')\r\n            currentDrag.started = true\r\n        }\r\n    }\r\n}\r\n\r\nfunction mouseup(e: MouseEvent) {\r\n    window.removeEventListener('mousemove', mousemove)\r\n    window.removeEventListener('mouseup', mouseup)\r\n    if (currentDrag.started) currentDrag.fireEvent(e, 'Finish')\r\n}\r\n\r\nconst currentDrag = {\r\n    ele: null as HTMLDivElement,\r\n    start: {\r\n        x: 0, y: 0\r\n    },\r\n    started: false,\r\n    onDrag: null as DragCallback,\r\n\r\n    fireEvent(e: MouseEvent, type: DragType) {\r\n        if (this.onDrag) this.onDrag(new DragEvent(this.ele, {\r\n            x: e.clientX - this.start.x,\r\n            y: e.clientY - this.start.y\r\n        }, type, e))\r\n    },\r\n\r\n    init(ele: HTMLDivElement, e: MouseEvent, onDrag: DragCallback) {\r\n        this.ele = ele\r\n        this.started = false\r\n        currentDrag.start.x = e.clientX\r\n        currentDrag.start.y = e.clientY\r\n        this.onDrag = onDrag\r\n        window.addEventListener('mousemove', mousemove)\r\n        window.addEventListener('mouseup', mouseup)\r\n    }\r\n}\r\n\r\nclass DragEvent {\r\n    constructor(public ele: HTMLDivElement, public change: XY, public type: DragType, public mouseEvent: MouseEvent) {\r\n\r\n    }\r\n}\r\n\r\ntype DragType = 'Start' | 'Moving' | 'Finish'\r\ntype DragCallback = (evt: DragEvent) => void\r\ninterface DragProps {\r\n    onDrag: DragCallback,\r\n    style?: React.CSSProperties,\r\n    children?: any\r\n}\r\n\r\nfunction Drag({ onDrag, style, children }: DragProps) {\r\n    const ref = React.createRef<HTMLDivElement>()\r\n    return <div className='Drag' onMouseDown={(e) => {\r\n        currentDrag.init(ref.current, e as any, onDrag)\r\n    }} style={style} ref={ref}>{children}</div>\r\n}\r\n\r\n\r\nexport { Drag, DragEvent }","\r\nimport React, { Component, useEffect, useState, useRef } from 'react'\r\nimport { Drag, DragEvent } from './Drag'\r\nimport classnames from 'classnames'\r\n\r\n\r\nfunction useUpdate() {\r\n    const [, update] = React.useState()\r\n    return () => {\r\n        update(Math.random())\r\n    }\r\n}\r\n\r\nclass View {\r\n    title: string | JSX.Element = ''\r\n\r\n    constructor(public id: string, public render: () => JSX.Element) {\r\n        this.title = id\r\n    }\r\n}\r\n\r\nfunction uuid() {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n        return v.toString(16);\r\n    });\r\n}\r\n\r\nclass Size {\r\n    constructor(public width: number, public height: number) {\r\n\r\n    }\r\n    read(src: { width: number, height: number }) {\r\n        let changed = false\r\n        if (this.width !== src.width || this.height !== src.height) {\r\n            this.width = src.width\r\n            this.height = src.height\r\n            changed = true\r\n        }\r\n        this.default = false\r\n        return changed\r\n    }\r\n    default = true\r\n}\r\n\r\ntype AnchorDir = 'horizontal' | 'vertical' | 'tabs'\r\n\r\n/**\r\n * an Anchor either has a view or has children, can never both\r\n * if pull an anchor to a ViewAnchor, that convert it to a ContainerAnchor\r\n */\r\nclass AnchorModel {\r\n    readonly id = uuid()\r\n    readonly children: AnchorModel[] = []\r\n    readonly size = new Size(100, 100)\r\n\r\n    parent: AnchorModel = null\r\n    dir: AnchorDir = 'horizontal'\r\n    get sizeCSS() {\r\n        return {\r\n            width: this.size.width + 'px',\r\n            height: this.size.height + 'px'\r\n        }\r\n    }\r\n\r\n    get ancestors(): AnchorModel[] {\r\n        const { parent } = this\r\n        if (parent) {\r\n            return [parent, ... this.parent.ancestors]\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n\r\n    /**\r\n     * root of the anchor tree\r\n     */\r\n    get root(): AnchorModel {\r\n        let anc = this as AnchorModel\r\n        while (anc.parent) anc = anc.parent\r\n        return anc;\r\n    }\r\n\r\n    findById(id: string) {\r\n        if (this.id == id) {\r\n            return this\r\n        } else {\r\n            let match = null\r\n            this.children.some(c => {\r\n                match = c.findById(id)\r\n                return match != null\r\n            })\r\n            return match\r\n        }\r\n    }\r\n\r\n    findByView(view: View) {\r\n        if (this.view == view) {\r\n            return this\r\n        } else {\r\n            let match = null\r\n            this.children.some(c => {\r\n                match = c.findByView(view)\r\n                return match != null\r\n            })\r\n            return match\r\n        }\r\n    }\r\n\r\n    get depth() {\r\n        return this.ancestors.length\r\n    }\r\n\r\n    constructor(public view: View = null) {\r\n\r\n    }\r\n\r\n    get isContainer() {\r\n        return this.view == null\r\n    }\r\n\r\n    get index() {\r\n        return this.parent ? this.parent.children.indexOf(this) : -1\r\n    }\r\n\r\n    /** \r\n     * when a view is dragged to an anchor but the direction doesn't fit or not a container,\r\n     * evolve self to have the desired dir\r\n     */\r\n    evolve(dir: AnchorDir) {\r\n        console.log('evolve with ' + dir)\r\n        const clone = this.clone()\r\n        clone.children.forEach(c => c.parent = clone)\r\n        this.children.length = 0\r\n        this.dir = dir\r\n        this.addChild(clone)\r\n        return this\r\n    }\r\n\r\n    clone() {\r\n        const anchor = new AnchorModel()\r\n        anchor.dir = this.dir\r\n        this.children.forEach(c => anchor.children.push(c))\r\n        anchor.size.read(this.size)\r\n        return anchor\r\n    }\r\n\r\n    replaceChild(child: AnchorModel, index: number) {\r\n        this.children.splice(index, 1, child)\r\n        child.parent = this\r\n    }\r\n\r\n    /**\r\n     * move anchor among the anchor tree\r\n     * if this is not a container, this will be converted to a container and original view goes down\r\n     * @param child \r\n     */\r\n    addChild(child: AnchorModel, insertAt = -1) {\r\n        const { children, isContainer, view } = this\r\n        if (isContainer) {//already a container \r\n            if (children.includes(child)) {//means reorder\r\n                var before = children[insertAt]\r\n                this.removeChild(child)\r\n                this.addChild(child, this.children.indexOf(before))\r\n                return\r\n            } else {\r\n                if (insertAt != -1) {\r\n                    children.splice(insertAt, 0, child)\r\n                } else {\r\n                    children.push(child)\r\n                }\r\n                if (child.parent) {\r\n                    child.parent.removeChild(child)\r\n                }\r\n                child.parent = this\r\n            }\r\n\r\n        } else {//change to a container\r\n            this.view = null\r\n            this.addChild(new AnchorModel(view))\r\n            this.addChild(child, insertAt)\r\n        }\r\n    }\r\n\r\n    removeChild(child: AnchorModel) {\r\n        this.children.splice(this.children.indexOf(child), 1)\r\n        child.parent = null\r\n    }\r\n\r\n    /**\r\n     * show cut to attach a new view to the tree\r\n     * @param view \r\n     * @param insertAt \r\n     */\r\n    addView(view: View, insertAt = -1) {\r\n        const child = new AnchorModel(view)\r\n        this.addChild(child, insertAt)\r\n        return child\r\n    }\r\n\r\n    /**\r\n     * remove useless anchor\r\n     */\r\n    cleanup() {\r\n        this.children.forEach(c => c.cleanup())\r\n        if (this.isContainer && this.children.length == 0) {\r\n            if (this.parent) this.parent.removeChild(this)\r\n        }\r\n    }\r\n}\r\n\r\nfunction findLayout(element: HTMLElement): HTMLElement {\r\n    if (element == null) {\r\n        return null\r\n    } else if (element.classList.contains('Layout')) {\r\n        return element\r\n    } else {\r\n        return findLayout(element.parentElement)\r\n    }\r\n}\r\n\r\ninterface TabsProps {\r\n    views: View[]\r\n    onDrop: (key: string, view: View) => void\r\n}\r\n\r\nfunction Tabs({ views, onDrop }: TabsProps) {\r\n    let dragShadow: HTMLDivElement = null\r\n    const start = { x: 0, y: 0 }\r\n    const [active, setActive] = useState(0),\r\n        selected = Math.max(Math.min(active, views.length - 1), 0),\r\n        tabs = views.map((view, i) => {\r\n            function onDrag({ type, ele, change, mouseEvent }: DragEvent) {\r\n                switch (type) {\r\n                    case \"Start\": //build a drag shadow\r\n                        findLayout(ele).classList.add('dragging')\r\n                        dragShadow = ele.cloneNode(true) as HTMLDivElement\r\n                        dragShadow.classList.add('asDragShadow')\r\n                        document.body.appendChild(dragShadow)\r\n                        //const { left, top } = ele.getBoundingClientRect()\r\n                        start.x = mouseEvent.clientX + 10\r\n                        start.y = mouseEvent.clientY\r\n                        dragShadow.style.left = start.x + change.x + 'px'\r\n                        dragShadow.style.top = start.y + change.y + 'px'\r\n                        break;\r\n                    case \"Moving\":\r\n                        dragShadow.style.left = start.x + change.x + 'px'\r\n                        dragShadow.style.top = start.y + change.y + 'px'\r\n                        break;\r\n                    case \"Finish\":\r\n                        const dropZone = document.elementFromPoint(mouseEvent.clientX, mouseEvent.clientY),\r\n                            dropKey = dropZone.getAttribute(\"x-dropkey\")\r\n                        dragShadow.remove()\r\n                        findLayout(ele).classList.remove('dragging')\r\n                        onDrop(dropKey, view)\r\n                        break;\r\n                }\r\n            }\r\n\r\n            return <span key={i} onMouseDown={() => {\r\n                if (active !== i) setActive(i)\r\n            }} className={classnames({ selected: selected == i })}>\r\n                <Drag onDrag={onDrag}>{view.title}</Drag>\r\n            </span>\r\n        })\r\n    console.log(selected, views.length)\r\n    const body = views[selected].render()\r\n\r\n    return <div className='Tabs'>\r\n        <div className='head'>{tabs}</div>\r\n        <div className='body'>{body}</div>\r\n    </div>\r\n}\r\n\r\ninterface AnchorProps {\r\n    model: AnchorModel\r\n    update: () => void\r\n}\r\nfunction Anchor({ model: anchor, update }: AnchorProps) {\r\n    const { isContainer, view, dir, children } = anchor,\r\n        updateAnchor = useUpdate(),\r\n        content: JSX.Element[] = []\r\n\r\n    function drawChildren(key: 'width' | 'height') {\r\n        const key_fix = ['width', 'height'].filter(t => t !== key)[0] as 'width' | 'height'\r\n        const total = anchor.size[key],\r\n            configSize = children.reduce((t, c) => t + c.size[key], 0),\r\n            ratio = total / configSize,\r\n            positions = [0]\r\n        let usedLength = 0\r\n        children.forEach((c, i) => {\r\n            const lastOne = (i == children.length - 1),\r\n                currentSize = lastOne ? Math.floor(total - usedLength) : Math.round(c.size[key] * ratio)\r\n            c.size[key] = currentSize\r\n            c.size[key_fix] = anchor.size[key_fix]\r\n            usedLength += currentSize\r\n            content.push(<Anchor model={c} key={c.id} update={update} />)\r\n\r\n            if (!lastOne) {//not the last, add a separator \r\n                const dkey = (key == 'width') ? 'left' : 'top',\r\n                    drag = {\r\n                        init: 0,\r\n                        change: 0\r\n                    }\r\n                content.push(<Drag key={'Drag_' + i} onDrag={({ ele, change, type }) => {\r\n                    const changeMin = -currentSize + 20,\r\n                        changeMax = children[i + 1].size[key] - 20\r\n                    switch (type) {\r\n                        case 'Start':\r\n                            drag.init = parseInt(ele.style[dkey])\r\n                            drag.change = 0\r\n                            ele.classList.add('moving')\r\n                            break;\r\n                        case 'Moving':\r\n                            let posChange = change[key == 'width' ? 'x' : 'y']\r\n                            drag.change = Math.max(changeMin, Math.min(posChange, changeMax))\r\n                            ele.style[dkey] = (drag.init + drag.change) + 'px'\r\n                            break;\r\n                        case 'Finish'://apply to the container //affect siblings \r\n                            children[i].size[key] += drag.change\r\n                            children[i + 1].size[key] -= drag.change\r\n                            updateAnchor()\r\n                            ele.classList.remove('moving')\r\n                            break;\r\n                    }\r\n                }} style={{\r\n                    [dkey]: usedLength + 'px'\r\n                }} />)\r\n            }\r\n            positions.push(usedLength)\r\n        })\r\n    }\r\n\r\n    function onDrop(key: string, view: View) {\r\n        console.log('ondrop')\r\n        if (!(key && view)) return  //for safty\r\n        const anchorId = key.split('_')[0],\r\n            { root } = anchor\r\n        const target = root.findByView(view),\r\n            moveTo = root.findById(anchorId),\r\n            dir = key.split('_')[1] as 'centre' | 'top' | 'bottom' | 'left' | 'right'\r\n        if (target == moveTo) {\r\n            console.log('same. skip')\r\n            return //do nothing\r\n        }\r\n\r\n        console.log(root.id)\r\n        if (!moveTo) {\r\n            console.log('cannot find ' + anchorId)\r\n        }\r\n        if (!target) {\r\n            console.log('cannot find view')\r\n        }\r\n\r\n\r\n        function insert(dir: AnchorDir, before: boolean) {\r\n            const { parent } = moveTo\r\n            if (moveTo.isContainer && moveTo.dir == dir) {//insert to self \r\n                console.log('add to self ')\r\n                moveTo.addChild(target, before ? 0 : -1)\r\n            } else if (parent && parent.dir == dir) {//insert to parent before self  \r\n                const idx = moveTo.index + (before ? 0 : 1)\r\n                console.log('add to parent ' + idx)\r\n                parent.addChild(target, idx)\r\n            } else {//convert self\r\n                const container = moveTo.evolve(dir)\r\n                container.addChild(target, (before ? 0 : 1))\r\n            }\r\n        }\r\n\r\n        switch (dir) {\r\n            case 'centre':\r\n                moveTo.addChild(target)\r\n                moveTo.dir = 'tabs'\r\n                break\r\n            case 'top': insert('vertical', true); break;\r\n            case 'bottom': insert('vertical', false); break;\r\n            case 'left': insert('horizontal', true); break;\r\n            case 'right': insert('horizontal', false);; break;\r\n        }\r\n        update()\r\n        const w = window as any;\r\n        w['r'] = target.root\r\n    }\r\n\r\n    if (isContainer && dir !== \"tabs\") {\r\n        switch (dir) {\r\n            case \"horizontal\":\r\n                drawChildren('width')\r\n                break;\r\n            case \"vertical\":\r\n                drawChildren('height')\r\n                break;\r\n        }\r\n    } else { //  tabs or simple anchor\r\n        const views = view == null ? children.map(a => a.view) : [view]\r\n        content.push(<Tabs key='tabs' views={views} onDrop={onDrop} />)\r\n    }\r\n\r\n    //the drop zones \r\n\r\n    const dropZones = 'centre,top,bottom,left,right'.split(',').map(name => {\r\n        var cssKey = ({\r\n            'top': 'bottom',\r\n            'bottom': 'top',\r\n            'left': 'right',\r\n            'right': 'left'\r\n        } as any)[name]\r\n\r\n        const style = {\r\n            [cssKey]: `calc(100% - ${(anchor.depth + 1) * 20}px)`,\r\n            zIndex: 10\r\n        }\r\n        if (name == 'centre') (style as any)['zIndex'] = anchor.depth\r\n        const dropKey = anchor.id + \"_\" + name\r\n        return <div key={'dzone_' + name} x-dropkey={dropKey}\r\n            className={classnames('dropZone', name)} style={style} />\r\n    })\r\n\r\n    //todo only add dir class name for container\r\n    return <div style={anchor.sizeCSS}\r\n        id={anchor.id} className={classnames('Anchor', isContainer ? dir : null)} >\r\n        {content}\r\n        {dropZones}\r\n    </div>\r\n}\r\n\r\n\r\ninterface LayoutProps {\r\n    views: View[]\r\n}\r\nfunction Layout({ views }: LayoutProps) {\r\n    const [root, setRoot] = useState<AnchorModel>(null),\r\n        update = useUpdate(),\r\n        ref = useRef<HTMLDivElement>()\r\n    console.log('render')\r\n\r\n    useEffect(() => {\r\n        const rect = ref.current.getBoundingClientRect()\r\n        if (rect.height == 0) {\r\n            setTimeout(update, 100);\r\n        } else {\r\n            if (root.size.read(rect)) update()\r\n        }\r\n    });\r\n\r\n    if (!root) {\r\n        let root = new AnchorModel\r\n        root.addView(views[0])\r\n        root.addView(views[1])\r\n        let a2 = root.addView(views[2])\r\n        a2.dir = 'vertical'\r\n        a2.addView(views[3])\r\n        a2.addView(views[4])\r\n        let a5 = root.addView(views[5])\r\n        a5.dir = 'tabs'\r\n        a5.addView(views[6])\r\n        a5.addView(views[7])\r\n        setRoot(root)\r\n    }\r\n\r\n    return <div className='SBlock Layout' ref={ref}>\r\n        {(root && !root.size.default) ? <Anchor model={root} update={() => {\r\n            root.cleanup()\r\n            update()\r\n        }} /> : null}\r\n    </div >\r\n}\r\n\r\nexport { View, Layout }   ","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.scss';\n\nimport { View, Layout } from './block/block'\n\n\nconst views: View[] = []\n\n'0,1,2,3,4,5,6,7,8,9,10'.split(',').forEach(name => {\n  views.push(new View(\"view \" + name, () => {\n    //console.log('print ' + name)\n    return <div>view {name}</div>\n  }))\n})\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Layout views={views} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'babel-polyfill';\nimport 'react-app-polyfill/ie11'\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}